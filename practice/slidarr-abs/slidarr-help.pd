#N canvas 827 239 900 717 12;
#X obj 19 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 229 49 height \$1;
#X obj 229 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 99 49 uni \$1;
#X obj 99 9 tgl 25 0 empty empty empty 17 7 0 10 #191919 #ffffff #ffffff 0 1;
#X obj 159 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 159 49 width \$1;
#X msg 309 49 spacing \$1;
#X obj 309 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 399 49 xoffset \$1;
#X obj 399 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 19 49 resize \$1;
#X text 509 138 name argument is required \; so it must be created like \; [slidarr name] \; and you need an array of \; the same name in the patch;
#X text 512 242 <-- this was created using [slidarr hi];
#X msg 799 119 bg #191919;
#X msg 715 119 bg #ffacab;
#X text 589 273 required array -->;
#X text 19 338 INLETS: \; 1st: for the methods \; 2nd: set y-value of selected index \; 3rd: select index to write to \; NOTE: the second and third inlets work like [tabwrite];
#X obj 559 99 nbx 4 18 -1 1 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X obj 609 99 nbx 4 18 0 1000 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X text 653 99 index;
#X text 519 98 y val;
#N canvas 0 50 450 250 (subpatch) 0;
#X array hi 94 float 3;
#A 0 -0.824268 -0.824268 -0.8159 -0.8159 -0.8159 -0.807531 -0.807531 -0.807531 -0.799163 -0.774059 -0.76569 -0.757322 -0.740586 -0.723849 -0.707113 -0.698745 -0.665272 -0.648536 -0.631799 -0.589958 -0.564854 -0.531381 -0.497908 -0.456067 -0.39749 -0.364017 -0.313808 -0.263598 -0.213389 -0.16318 -0.112971 -0.0460251 0.0711297 0.138075 0.205021 0.263598 0.280335 0.338912 0.380753 0.422594 0.464435 0.48954 0.531381 0.564854 0.606695 0.631799 0.656904 0.67364 0.682008 0.698745 0.707113 0.715481 0.723849 0.740586 0.740586 0.748954 0.748954 0.76569 0.76569 0.76569 0.76569 0.748954 0.732218 0.715481 0.698745 0.656904 0.648536 0.623431 0.598326 0.58159 0.556485 0.539749 0.514644 0.506276 0.497908 0.497908 0.48954 0.48954 0.48954 0.514644 0.531381 0.556485 0.589958 0.615063 0.623431 0.640167 0.640167 0.606695 0.573222 0.514644 0.456067 0.389121 0.313807 0.25523;
#X coords 0 1 94 -1 152 52 1;
#X restore 719 279 graph;
#X msg 479 49 sync;
#X obj 19 99 slidarr hi;
#A saved 94 0 470 239 2 3 0 0 #191919;
#X msg 529 49 colorsync;
#N canvas 0 50 450 250 (subpatch) 0;
#X array hi-r 94 float 3;
#A 0 255 255 255 255 255 255 253.365 251.731 246.827 243.558 230.481 186.346 186.346 186.346 186.346 186.346 186.346 186.346 186.346 49.0385 49.0385 51.4904 147.115 147.115 147.115 147.115 147.115 142.212 136.082 129.952 123.822 118.305 110.643 103.185 95.7272 89.972 84.2167 81.3391 77.4484 75.5031 73.5577 73.5577 73.5577 73.5577 75.1923 76.8269 89.9038 93.5 97.0961 100.692 104.288 110.391 116.494 126.901 137.008 142.062 147.115 132.404 117.692 88.2692 68.6538 235.385 235.385 235.385 235.385 235.385 235.385 235.385 235.419 235.453 49.0385 49.0385 49.0385 49.0385 49.0385 49.0385 49.0385 49.0385 49.0385 235.385 235.385 235.385 235.385 235.385 235.385 235.385 235.385 235.385 196.154 196.154 196.154 191.25 188.798 127.5;
#X coords 0 255 94 0 122 52 1;
#X restore 469 399 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array hi-g 94 float 3;
#A 0 122.596 122.596 122.596 122.596 122.596 122.596 122.596 122.596 122.596 122.596 124.231 125.865 127.5 129.135 130.769 133.63 136.49 139.351 140.066 140.781 141.496 143.369 145.242 146.937 148.631 150.325 150.89 151.454 153.277 155.1 156.012 156.315 156.619 156.721 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 156.923 154.471 153.245 149.567 142.212 140.577 138.942 135.673 131.587 129.543 128.522 125.559 121.626 120.314 119.003 118.348 118.129 117.911 117.802 117.765 117.729 116.082 114.435 113.886 113.337 113.063 112.971 112.788 112.788 61.2981 73.5577 73.5577 78.4615 83.3654 85.8173 87.0433 88.2692 68.6538 49.0385;
#X coords 0 255 94 0 122 52 1;
#X restore 599 399 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array hi-b 94 float 3;
#A 0 250.096 232.933 230.481 205.962 188.798 174.087 171.635 171.635 171.635 171.635 171.635 171.635 171.635 171.635 171.635 171.635 171.635 171.635 174.087 176.538 176.538 178.99 181.442 181.442 181.442 182.668 183.894 185.12 188.798 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 191.25 187.981 184.712 181.442 181.442 181.442 181.442 180.216 178.99 177.764 174.904 173.269 170 168.365 165.096 163.462 159.375 156.923 154.471 149.567 147.115 144.663 137.308 132.404 127.5 120.144 117.692 115.24 112.788 110.337 104.207 100.529 96.851 88.2692 83.3654 76.0096 71.9231 70.2885 68.6538 68.6538 69.2668 73.5577 73.5577 73.5577;
#X coords 0 255 94 0 122 52 1;
#X restore 729 399 graph;
#X text 539 288 (for reading values and \; storing contents in patch);
#X msg 609 49 coloring \$1;
#X obj 609 9 tgl 25 0 empty empty empty 17 7 0 10 #191919 #ffffff #ffffff 0 1;
#X text 519 358 arrays defining the color of each slider (name-r/g/b);
#X text 459 458 ARGUMENTS: \; [slidarr name size uni width height spacing xoffset coloring hsl bg] \; \; - name: the name of this instance (you must create an array with the same name) (this is the only required argument) \; - size: number of sliders (default 64) \; - uni: 1 = unipolar \, 0 = bipolar (default 0) \; - width/height: dimentions in pixels (default 470 x 240) \; - spacing: spacing between the sliders in pixels (default 2) (can be negative) \; - xoffset: offset along the x axit cause i'm too lazy to figure out what's going wrong there (default 3) (just eyeball it!) \; - coloring: 1 makes sliders update their color from the array whenever they're moved \, 0 only update colors when colorsync message is received \; - hsl: 1 reads the color arrays as hsl \, 0 as rgb \; - bg: hex color of the background;
#X text 19 428 METHODS: \; - resize <float>: set the number of sliders (this will also resize the corresponding array) \; - uni <float>: 1=unipolar \, 0=bipolar \; - width <float> /height <float>: dimentions in pixels (width should be a multiple of the number of sliders to avoid irregular spacing) \; - spacing <float>: set the spacing between sliders \; - xoffset <float>: offset all sliders along the x axis \; - sync : read the values from the array. this is triggered on load \, so if the array keeps it's contents in patch they'll be displayed \; - colorsync : sets the color of each slider from the color arrays \; - coloring <float> : whether or not to update the slider's color from the arrays when it's moved (if the sliders are constantly moving \, this is faster than triggering a colorsync) \; - bg <symbol>: set the background color (in hex) (default #191919) \;;
#X msg 699 49 hsl \$1;
#X obj 699 9 tgl 25 0 empty empty empty 17 7 0 10 #191919 #ffffff #ffffff 0 1;
#X obj 529 9 loadbang;
#X connect 0 0 11 0 empty;
#X connect 1 0 24 0 32.................J....7x+++uB....u7+++6A....;
#X connect 2 0 1 0 empty;
#X connect 3 0 24 0 32.................J....D6+++uB....w9+++6A....;
#X connect 4 0 3 0 empty;
#X connect 5 0 6 0 empty;
#X connect 6 0 24 0 32.................J....T2+++uB....08+++6A....;
#X connect 7 0 24 0 32.................J....7s+++uB....e6+++6A....;
#X connect 8 0 7 0 empty;
#X connect 9 0 24 0 32.................J....Tn+++uB....E5+++6A....;
#X connect 10 0 9 0 empty;
#X connect 11 0 24 0 empty;
#X connect 14 0 24 0 48.................H....L4+++OB....S9+++S7+++e87+++D++++WO+++e1++++;
#X connect 15 0 24 0 48.................H....b9+++OB....m++++S7+++eR8+++D++++mT+++e1++++;
#X connect 18 0 24 1 48.................D....b7+++OA....G++++a9+++ew9+++l++++Wr++++6++++;
#X connect 19 0 24 2 48.................I....v3+++eB....L9+++u9++++b++++q++++O2++++6++++;
#X connect 23 0 24 0 32.................J....rh+++uB....q3+++6A....;
#X connect 25 0 24 0 32.................J....7d+++uB....u2+++6A....;
#X connect 30 0 24 0 32.................J....rX+++uB....K1+++6A....;
#X connect 31 0 30 0 empty;
#X connect 35 0 24 0 32.................J....7T+++uB....O0+++6A....;
#X connect 36 0 35 0 empty;
#X connect 37 0 25 0 empty;
