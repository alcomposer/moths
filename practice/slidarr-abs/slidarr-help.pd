#N canvas 827 239 900 680 12;
#X obj 9 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 219 49 height \$1;
#X obj 219 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 89 49 uni \$1;
#X obj 89 9 tgl 25 0 empty empty empty 17 7 0 10 #191919 #ffffff #ffffff 0 1;
#X obj 149 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 149 49 width \$1;
#X msg 299 49 spacing \$1;
#X obj 299 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 559 49 rndclr;
#X msg 619 49 restore;
#X obj 469 9 tgl 25 0 empty empty empty 17 7 0 10 #191919 #ffffff #ffffff 0 1;
#X msg 469 49 coloring \$1;
#X msg 389 49 xoffset \$1;
#X obj 389 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 9 49 resize \$1;
#X text 529 148 name argument is required \; so it must be created like \; [slidarr name] \; and you need an array of \; the same name in the patch;
#X obj 29 109 slidarr hi;
#X text 512 252 <-- this was created using [slidarr hi];
#X text 519 308 (useful for reading the values);
#X msg 739 184 fg \$1;
#X obj 739 154 colors;
#X msg 789 59 bg #191919;
#X msg 699 59 bg #ffacab;
#X msg 739 124 hsl \$1 100 50;
#X obj 742 99 hsl 128 17 0 360 0 0 empty empty empty -2 -8 0 10 #191919 #ffffff #ffffff 0 1;
#X text 589 288 required array -->;
#X text 19 358 ARGUMENTS: \; [slidarr name size uni width height spacing xoffset coloring] \; \; - name: the name of this instance (you must create an array with the same name) (this is the only required argument) \; - size: number of sliders (default 64) \; - uni: 1 = unipolar \, 0 = bipolar (default 0) \; - width/height: dimentions in pixels (default 470 x 240) \; - spacing: spacing between the sliders in pixels (default 2) (can be negative) \; - xoffset: offset along the x axit cause i'm too lazy to figure out what's going wrong there (default 3) (just eyeball it!) \; - coloring: 1 makes the sliders change colors based on their value \, 0 keeps them static \;;
#X text 469 388 METHODS: \; NOTE: most of those won't update live \, so you probably wanna send the restore message after changing any of them \; \; - resize <float>: set the number of sliders (this will also resize the corresponding array) \; - uni <float>: 1=unipolar \, 0=bipolar \; - width <float> /height <float>: dimentions in pixels (width should be a multiple of the number of sliders to avoid irregular spacing) \; - spacing <float>: set the spacing between sliders \; - xoffset <float>: offset all sliders along the x axis \; - coloring <float>: 1 = sliders change color based on their y-value \, 0 = static color \; - restore : read the values from the array. this is triggered on load \, so if the array keeps it's contents in patch they'll be displayed (you wanna send this after changing any of the above methods) \; \; - rndclr: randomize the color for each slider (hue only) \; - bg <symbol>: set the background color (in hex) (default #191919) \; - fg <symbol>: set the foreground color;
#X text 19 595 INLETS: \; 1st: for the methods \; 2nd: set y-value of selected index \; 3rd: select index to write to \; NOTE: the second and third inlets work like [tabwrite];
#X obj 559 99 nbx 4 18 -1 1 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X obj 609 99 nbx 4 18 0 1000 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X text 653 99 index;
#X text 519 98 y val;
#N canvas 0 50 450 250 (subpatch) 0;
#X array hi 64 float 3;
#A 0 0.95 0.925 0.908333 0.883333 0.875 0.85 0.825 0.775 0.75 0.725 0.7 0.675 0.65 0.616667 0.583333 0.55 0.525 -0.29 0.458333 0.458333 0.433333 0.391667 0.366667 0.333333 0.283333 0.258333 0.216667 0.183333 0.166667 0.133333 0.0916667 0.55 0.075 0.025 -0.0166667 -0.0333334 -0.0666667 -0.0833333 -0.108333 -0.133333 -0.175 -0.2 -0.233333 -0.258333 -0.283333 -0.308333 -0.316667 -0.35 -0.391667 -0.416667 -0.483333 -0.516667 -0.533333 -0.583333 -0.6 -0.633333 -0.666667 -0.708333 -0.758333 -0.808333 -0.841667 -0.875 -0.9 -0.941667;
#X coords 0 1 64 -1 152 52 1;
#X restore 719 299 graph;
#X text 519 348 see also;
#X obj 579 349 array define;
#X connect 0 0 15 0 empty;
#X connect 0 0 10 0 32.................E....Hl...PA....hI...v.....;
#X connect 1 0 17 0 32.................T....jy+++OE....47+++iB....;
#X connect 2 0 1 0 empty;
#X connect 2 0 10 0 32.................E.....Y...PA....PF...v.....;
#X connect 3 0 17 0 32.................T....r6+++OE....69+++iB....;
#X connect 4 0 3 0 empty;
#X connect 4 0 10 0 32.................H....Hg....B....RH...7.....;
#X connect 5 0 6 0 empty;
#X connect 5 0 10 0 32.................E....Xc...PA....VG...v.....;
#X connect 6 0 17 0 32.................T....72+++OE....+8+++iB....;
#X connect 7 0 17 0 32.................T....jt+++OE....o6+++iB....;
#X connect 8 0 7 0 empty;
#X connect 8 0 10 0 32.................E.....T...PA.....E...v.....;
#X connect 9 0 17 0 32.................T....Td+++OE....k2+++iB....;
#X connect 10 0 17 0 32.................T....jZ+++OE....o1+++iB....;
#X connect 11 0 12 0 empty;
#X connect 11 0 10 0 32.................H....XI....B....VB...7.....;
#X connect 12 0 17 0 32.................T....7i+++OE....+3+++iB....;
#X connect 13 0 17 0 32.................T....7n+++OE....O5+++iB....;
#X connect 14 0 13 0 empty;
#X connect 14 0 10 0 32.................E....XN...PA....lC...v.....;
#X connect 15 0 17 0 32.................T....n.....E....J....fB....;
#X connect 20 0 17 0 48.................M....H9+++eC....h++++23+++eL8+++M9+++GS+++un++++;
#X connect 21 0 20 0 empty;
#X connect 22 0 17 0 32.................J....7O+++uB....+y+++6A....;
#X connect 23 0 17 0 32.................J....jU+++uB....Y0+++6A....;
#X connect 24 0 21 0 empty;
#X connect 25 0 24 0 empty;
#X connect 30 0 17 1 48.................H....X7+++OB....F++++69++++y9+++t+++++r+++e9++++;
#X connect 31 0 17 2 48.................M....33+++eC....N9+++S++++ee++++z++++22+++e9++++;
