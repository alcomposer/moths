#N canvas 827 239 900 740 12;
#X obj 9 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 219 49 height \$1;
#X obj 219 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 89 49 uni \$1;
#X obj 89 9 tgl 25 0 empty empty empty 17 7 0 10 #191919 #ffffff #ffffff 0 1;
#X obj 149 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 149 49 width \$1;
#X msg 299 49 spacing \$1;
#X obj 299 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X msg 559 49 rndclr;
#X msg 619 49 restore;
#X obj 469 9 tgl 25 0 empty empty empty 17 7 0 10 #191919 #ffffff #ffffff 0 1;
#X msg 469 49 coloring \$1;
#X msg 389 49 xoffset \$1;
#X obj 389 19 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #ffffff #ffffff 0 256;
#X obj 699 289 array define -k hi;
#A resize 64;
#A 0 0.958333 0.941667 0.916667 0.883333 0.841667 0.825 0.816667 0.783333 0.766667 0.75 0.716667 0.691667 0.65 0.608333 0.575 0.525 0.483333 0.45 0.416667 0.375 0.35 0.308333 0.291667 0.25 0.208333 0.183333 0.15 0.116667 0.1 0.0666667 0.05 0.00833333 -0.0166667 -0.0416667 -0.0583333 -0.0916666 -0.108333 -0.133333 -0.166667 -0.191667 -0.233333 -0.25 -0.3 -0.341667 -0.375 -0.4 -0.425 -0.475 -0.516667 -0.541667 -0.566667 -0.6 -0.633333 -0.658333 -0.683333 -0.7 -0.741667 -0.783333 -0.808333 -0.833333 -0.858333 -0.883333 -0.941667 -0.975;
#X msg 9 49 resize \$1;
#X text 529 128 name argument is required \; so it must be created like \; [slidarr name] \; and you need an array of \; the same name in the patch;
#X obj 19 109 slidarr hi;
#X text 512 252 <-- this was created using [slidarr hi];
#X text 559 338 (useful for reading the values);
#X msg 739 184 fg \$1;
#X obj 739 154 colors;
#X msg 789 59 bg #191919;
#X msg 699 59 bg #ffacab;
#X msg 739 124 hsl \$1 100 50;
#X obj 742 99 hsl 128 17 0 360 0 0 empty empty empty -2 -8 0 10 #191919 #ffffff #ffffff 0 1;
#X text 539 288 required array -->;
#X text 19 608 INLETS: \; 1st: for the methods \; 2nd: set y-value of selected index \; 3rd: select index to write to;
#X text 19 698 NOTE: the second and third inlets work like tabwrite. in unipolar mode \, the y value should be from 0 to 1 \, BUT \, in bipolar it's from -0.5 to 0.5 (sorry);
#X text 19 358 ARGUMENTS: \; [slidarr name size uni width height spacing xoffset coloring] \; \; - name: the name of this instance (you must create an array with the same name) (this is the only required argument) \; - size: number of sliders (default 64) \; - uni: 1 = unipolar \, 0 = bipolar (default 0) \; - width/height: dimentions in pixels (default 470 x 240) \; - spacing: spacing between the sliders in pixels (default 2) (can be negative) \; - xoffset: offset along the x axit cause i'm too lazy to figure out what's going wrong there (default 3) (just eyeball it!) \; - coloring: 1 makes the sliders change colors based on their value \, 0 keeps them static \;;
#X text 469 388 METHODS: \; NOTE: most of those won't update live \, so you probably wanna send the restore message after changing any of them \; \; - resize <float>: set the number of sliders (this will also resize the corresponding array) \; - uni <float>: 1=unipolar \, 0=bipolar \; - width <float> /height <float>: dimentions in pixels \; - spacing <float>: set the spacing between sliders \; - xoffset <float>: offset all sliders along the x axis \; - coloring <float>: 1 = sliders change color based on their y-value \, 0 = static color \; - restore : read the values from the array. this is triggered on load \, so if the array keeps it's contents in patch they'll be displayed (you wanna send this after changing any of the above methods) \; \; - rndclr: randomize the color for each slider (hue only) \; - bg <symbol>: set the background color (in hex) (default #191919) \; - fg <symbol>: set the foreground color;
#X connect 0 0 16 0 empty;
#X connect 0 0 10 0 32.................E....Hl...PA....hI...v.....;
#X connect 1 0 18 0 32.................T....jy+++OE....47+++iB....;
#X connect 2 0 1 0 empty;
#X connect 2 0 10 0 32.................E.....Y...PA....PF...v.....;
#X connect 3 0 18 0 32.................T....r6+++OE....69+++iB....;
#X connect 4 0 3 0 empty;
#X connect 4 0 10 0 32.................H....Hg....B....RH...7.....;
#X connect 5 0 6 0 empty;
#X connect 5 0 10 0 32.................E....Xc...PA....VG...v.....;
#X connect 6 0 18 0 32.................T....72+++OE....+8+++iB....;
#X connect 7 0 18 0 32.................T....jt+++OE....o6+++iB....;
#X connect 8 0 7 0 empty;
#X connect 8 0 10 0 32.................E.....T...PA.....E...v.....;
#X connect 9 0 18 0 32.................T....Td+++OE....k2+++iB....;
#X connect 10 0 18 0 32.................T....jZ+++OE....o1+++iB....;
#X connect 11 0 12 0 empty;
#X connect 11 0 10 0 32.................H....XI....B....VB...7.....;
#X connect 12 0 18 0 32.................T....7i+++OE....+3+++iB....;
#X connect 13 0 18 0 32.................T....7n+++OE....O5+++iB....;
#X connect 14 0 13 0 empty;
#X connect 14 0 10 0 32.................E....XN...PA....lC...v.....;
#X connect 16 0 18 0 32.................T....n.....E....J....fB....;
#X connect 21 0 18 0 48.................M....H9+++eC....h++++23+++eL8+++M9+++GS+++un++++;
#X connect 22 0 21 0 empty;
#X connect 23 0 18 0 32.................J....7O+++uB....+y+++6A....;
#X connect 24 0 18 0 32.................J....jU+++uB....Y0+++6A....;
#X connect 25 0 22 0 empty;
#X connect 26 0 25 0 empty;
